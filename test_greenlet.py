#! /usr/bin/env python
# -*- coding: utf-8 -*-

from greenlet import greenlet


"""
コルーチン(a.k.a グリーンスレッド、マイクロスレッド、強調スレッド、ファイバ）を使うことで、処理を任意のタイミングで中断・再開できるようになる。
任意のタイミングというのは、つまりカーネルで実装されるネイティブスレッドとは異なり、コンテキストスイッチをプログラマが管理するということ。
これは、ユーザランドでスタックのコンテキストを保持することで実装されているようだ。
特にノンブロッキングI/Oと組み合わせて使うことで、マルチスレッドやイベントループを使わずに処理の並列化が実行できるらしい。
"""


def test1():
    print(12)  # 1
    gr2.switch()  # 2
    print(34)  # 5


def test2():
    print(56)  # 3
    gr1.switch()  # 4
    print(78)  # コルーチン gr1 がもう一度スイッチしないとこの行は実行されない

gr1 = greenlet(test1)
gr2 = greenlet(test2)
gr1.switch()


"""
処理が2つのコルーチンの間を行ったり来たりしている。
処理はあくまでもシングルスレッドで実行されている。
"""
